name: Build Image

on:
  push:
    branches:
      - master
    paths:
      - "src/**"
      - ".github/workflows/build.yml"
      - ".github/workflows/reusable-*"
  pull_request:
    branches:
      - "**"
    paths:
      - "src/**"
      - ".github/workflows/build.yml"
      - ".github/workflows/reusable-*"
  workflow_dispatch:

jobs:
  metadata:
    steps:
      - uses: actions/checkout@v5
        with:
          sparse-checkout: |
            src
          persist-credentials: false
      - id: git
        run: echo "build_commit_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
      - id: flavours
        run: |
          WORKSPACE_BUILD_FLAVOURS=$(find src -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq --raw-input . | jq --slurp --compact-output .)
          WORKSPACE_BUILD_FORKS=$(jq --compact-output 'map(select(. != "latest"))' <<< $WORKSPACE_BUILD_FLAVOURS)
          jq <<< $WORKSPACE_BUILD_FLAVOURS
          echo "build_flavours=${WORKSPACE_BUILD_FLAVOURS}" >> "$GITHUB_OUTPUT"
          jq <<< $WORKSPACE_BUILD_FORKS
          echo "build_forks=${WORKSPACE_BUILD_FORKS}" >> "$GITHUB_OUTPUT"
      - id: platforms
        run: |
          WORKSPACE_BUILD_PLATFORMS="[\"linux/amd64\", \"linux/arm64\"]"
          jq <<< $WORKSPACE_BUILD_PLATFORMS
          echo "build_platforms=${WORKSPACE_BUILD_PLATFORMS}" >> "$GITHUB_OUTPUT"
    outputs:
      build_commit_sha: ${{ steps.git.outputs.build_commit_sha }}
      build_flavours: ${{ steps.flavours.outputs.build_flavours }}
      build_forks: ${{ steps.flavours.outputs.build_forks }}
      build_platforms: ${{ steps.platforms.outputs.build_platforms }}
    runs-on: ubuntu-latest

  latest:
    needs:
      - metadata
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.metadata.outputs.build_platforms) }}
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
      fail-fast: true
    uses: ./.github/workflows/reusable-build.yml
    with:
      platform: ${{ matrix.platform }}
      runner: ${{ matrix.runner }}
      source: latest

  manifest:
    needs:
      - metadata
      - latest
    uses: ./.github/workflows/reusable-manifest.yml
    with:
      build-commit-sha: ${{ needs.metadata.outputs.build_commit_sha }}
      source: latest
    secrets:
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
      docker-username: ${{ secrets.DOCKER_USERNAME }}

  forks:
    needs:
      - metadata
      - manifest
    strategy:
      matrix:
        source: ${{ fromJSON(needs.metadata.outputs.build_forks) }}
        platform: ${{ fromJSON(needs.metadata.outputs.build_platforms) }}
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
      fail-fast: false
    uses: ./.github/workflows/reusable-build.yml
    with:
      build-args: |
        BASEIMAGE=ghcr.io/${{ github.repository }}/latest:${{ needs.metadata.outputs.build_commit_sha }}
      runner: ${{ matrix.runner }}
      platform: ${{ matrix.platform }}
      source: ${{ matrix.source }}

  manifests:
    needs:
      - metadata
      - forks
    strategy:
      matrix:
        source: ${{ fromJSON(needs.metadata.outputs.build_forks) }}
      fail-fast: false
    uses: ./.github/workflows/reusable-manifest.yml
    with:
      build-commit-sha: ${{ needs.metadata.outputs.build_commit_sha }}
      source: ${{ matrix.source }}
    secrets:
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
      docker-username: ${{ secrets.DOCKER_USERNAME }}

  scout:
    needs:
      - metadata
      - forks
      - latest
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        source: ${{ fromJSON(needs.metadata.outputs.build_flavours) }}
        platform: ${{ fromJSON(needs.metadata.outputs.build_platforms) }}
      fail-fast: false
    steps:
      - run: |
          DOCKER_IMAGE_TARGET_PLATFORM=${{ matrix.platform }}
          echo "DOCKER_IMAGE_TARGET_PLATFORM=${DOCKER_IMAGE_TARGET_PLATFORM//\//-}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.source }}-${{ env.DOCKER_IMAGE_TARGET_PLATFORM }}
          merge-multiple: true
      - run: |
          ls --all --format verbose $PWD
          DOCKER_IMAGE_REFERENCE=$(printf 'ghcr.io/${{ github.repository }}/${{ matrix.source }}@sha256:%s ' *)
          echo "DOCKER_IMAGE_REFERENCE=${DOCKER_IMAGE_REFERENCE}" >> $GITHUB_ENV
        working-directory: /tmp/digests
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/scout-action@v1
        with:
          command: compare
          image: ${{ env.DOCKER_IMAGE_REFERENCE }}
          to: ${{ github.repository }}:${{ matrix.source }}
          platform: ${{ matrix.platform }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          keep-previous-comments: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-22.04
# vim: set expandtab shiftwidth=2 syntax=yaml:
