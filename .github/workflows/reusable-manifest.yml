name: (resuable) Manifest

on:
  workflow_call:
    inputs:
      build-commit-sha:
        type: string
        required: true
      source:
        type: string
        required: true
    secrets:
      docker-password:
        required: true
      docker-username:
        required: true

jobs:
  manifest:
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: /tmp/digests
          pattern: digests-${{ inputs.source }}-*
          merge-multiple: true
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ inputs.source }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=raw,value=${{ inputs.build-commit-sha }}
      - if: ${{ github.ref_name == 'master' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-password }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: jq <<< "$DOCKER_METADATA_OUTPUT_JSON"
      - run: |
          docker buildx imagetools create $(jq --compact-output --raw-output '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository }}/${{ inputs.source }}@sha256:%s ' *)
        working-directory: /tmp/digests
      - if: ${{ github.ref_name == 'master' }}
        run: |
          docker buildx imagetools create --tag ghcr.io/${{ github.repository }}/${{ inputs.source }}:${{ github.ref_name }} \
            ghcr.io/${{ github.repository }}/${{ inputs.source }}:${{ inputs.build-commit-sha }}
          docker buildx imagetools create --tag ${{ github.repository }}:${{ inputs.source }} \
            ghcr.io/${{ github.repository }}/${{ inputs.source }}:${{ inputs.build-commit-sha }}
        env:
          DOCKER_USERNAME: ${{ secrets.docker-username }}
          DOCKER_PASSWORD: ${{ secrets.docker-password }}
    runs-on: ubuntu-22.04
